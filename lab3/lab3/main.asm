;*******************************************************************************************************************************
;Universidad del valle
;Prelab_3.asm
;Autor: Albert Vandercam Hart
;Hardware ATmega328P
;Creado: 31/01/2024
;*******************************************************************************************************************************
; ENCABEZADO
;*******************************************************************************************************************************
.include "M328PDEF.inc"
.CSEG
.ORG 0x0000
JMP MAIN
.ORG 0x0008
JMP INT_BOTON
.ORG 0x0020
JMP timmer
;*******************************************************************************************************************************
; STACK POINTER
;*******************************************************************************************************************************
MAIN:
	LDI R16, LOW(RAMEND)
	OUT SPL,R16
	LDI R17, HIGH(RAMEND)
	OUT SPH, R17
;*******************************************************************************************************************************
; CONFIGURACI[ON
;*******************************************************************************************************************************
 TABLAD: .DB 0x3F, 0x06, 0x5B, 0x4F, 0x66,0x6D, 0x7D, 0x07, 0x7F, 0x6F
setup:
	LDI R16, (1<<CLKPCE) ; aqui se habilita para que se pueda  configurar
	STS CLKPR, R16
	LDI R16, 0b0000_0001 ; A 4Mhz
	STS CLKPR, R16
	;:SE CONFIGURA EL PRESCALER
	CALL prescaler
	; ACTIVAR LOS PUERTOS
	;ACTIVAR PUERTOS C
	LDI R16,0xFC ; CONFIUGURAR SI SON ENTRADA: 1PULL UP, SI ES SALIDA 1 5V
	OUT DDRC, R16 ;SE CONFIGURARON LOS PINES DE OUTPUTS/INPUTS, 1 SALIDA 0  ENTRADA
	LDI R17,0x0F
	OUT PORTC, R17
	; ACTIVAR PUERTOS B
	LDI R16, 0xFF 
	OUT DDRB, R16 ;SE CONFIGURARON LOS PINES DE OUTPUTS/INPUTS 1 SALIDA 0  ENTRADA
	LDI R17, 0x00 ; CONFIUGURAR SI SON ENTRADA: 1PULL UP, SI ES SALIDA 1 5V
	OUT PORTB, R17
	;ACTIVAR PUERTOS D
	LDI R16, 0xFF
	LDI R17, 0x00
	OUT DDRD, R16 ;SE CONFIGURARON LOS PINES DE OUTPUTS/INPUTS 1 SALIDA 0  ENTRADA
	OUT PORTD, R17
	; AQUÍ SE DESACTIVAN EL RX Y TX
	LDI R16, 0x00
	STS UCSR0B, R16
	; ACTIVAR LAS INTERRUPCIONES
	LDI R16, (1<<PCIE1) ; ACTIVAR QUE SEA EL PORTC EL QUE TENGA INTERUPCIONES
	STS PCICR, R16
	LDI R16, (1<<PCINT8)|(1<<PCINT9) ; ACTIVAR QUE SEA LOS PINES 0 Y 1
	STS PCMSK1, R16
	;ACTIVAR LAS INTERRUCCIONES DEL  TIMMER
	LDI R16, (1<<TOIE0)
	STS TIMSK0, R16
	SEI ; ACTIVAR LAS INTERUPCIONES
	LDI R19, 254
	; CONFIGURACIÓN DEL DISPLAY PA QUE EMPIECE EN 0
	LDI ZH, HIGH(TABLAD<<1) ; CON ESTO SE LOGRA QUE EL DISPLAY EMPIECE EN 0
	LDI ZL, LOW(TABLAD<<1)
	LPM R21, Z
	CLR R23
	ADD R23, R21
	OUT PORTD, R21
	SBI PORTC, PC2
	LDI R16 , 0
MAIN_LOOP:
	CPI R24, 1
	BREQ PRENDER_APAGAR
	CPI R20, 100
	BRNE MAIN_LOOP
	// AQUI EMPIEZA LA SUMA DE LOS SEGUNDOS
	CLR R20
	INC R16
	LDI ZH, HIGH(TABLAD<<1) ; CON ESTO SE LOGRA QUE EL DISPLAY EMPIECE EN 0
	LDI ZL, LOW(TABLAD<<1)
	ADD ZL,R16
	CPI R21, 0x6F
	BREQ SUMAR_DECENAS
	LPM R21, Z
	JMP MAIN_LOOP
	// AQUI TERMINAR LA SUMA DE LOS SEGUNDS

// AQUI SE INTENTA HACER QUE CADA 5MS LOS DISPLAYAS CAMBIEN LA SEÑAL PARA PODER VER QUE AMBOS ESTÁN PRENDIDOS 
PRENDER_APAGAR:
	CLR R24
	SBIS PORTC, PC2
	JMP PRENDER_PC2
	SBIS PORTC, PC5
	JMP PRENDER_PC5
	JMP MAIN_LOOP
PRENDER_PC2:
	SBI PORTC, PC2
	CBI PORTC, PC5
	OUT PORTD, R21
	JMP  MAIN_LOOP
PRENDER_PC5:
	CBI PORTC, PC2
	SBI PORTC, PC5
	OUT PORTD, R23
	JMP MAIN_LOOP
// AQUÍ ACABA 
SUMAR_DECENAS:
	CLR R16
	LDI ZH, HIGH(TABLAD<<1) ; CON ESTO SE LOGRA QUE EL DISPLAY EMPIECE EN 0
	LDI ZL, LOW(TABLAD<<1)
	LPM R21, Z
	INC R25
	OUT PORTD, R21
	LDI ZH, HIGH(TABLAD<<1) ; CON ESTO SE LOGRA QUE EL DISPLAY EMPIECE EN 0
	LDI ZL, LOW(TABLAD<<1)
	ADD ZL,  R25
	LPM R23, Z
	CPI R23, 0x7D
	BREQ EMPEZAR_D
	
	OUT PORTD, R23
	JMP MAIN_LOOP
EMPEZAR_D:
	CLR R25
	LDI ZH, HIGH(TABLAD<<1) ; CON ESTO SE LOGRA QUE EL DISPLAY EMPIECE EN 0
	LDI ZL, LOW(TABLAD<<1)
	LPM  R23, Z
	JMP MAIN_LOOP
INT_BOTON:
	PUSH R16
	IN R16, SREG
	PUSH R16
	CALL DELAY
	SBIS PINC, PC0
	JMP SUMAR
	SBIS PINC, PC1
	JMP RESTAR 
B_FIN:
	POP R16
	OUT SREG, R16
	POP R16
	RETI
SUMAR:
	CPI R17, 0x0F
	BREQ	B_FIN
	INC R17
	OUT PORTB, R17
	JMP B_FIN
RESTAR:
	CPi R17, 0x00
	BREQ B_FIN
	DEC R17
	OUT PORTB, R17
	JMP B_FIN
timmer:
	PUSH R16
	IN R16, SREG
	PUSH R16
	
	LDI R16, 158
	OUT TCNT0, R16
	INC R20
	INC R24

	POP R16
	OUT SREG, R16 
	POP R16
	RETI 
DELAY:
	LDI R18, 254
LOOP_DELAY:
	DEC R18
	BRNE LOOP_DELAY
	DEC R19
	BRNE DELAY
	RET
	prescaler:
	LDI R16, (1<<CS02)|(1<<CS00) ; SE CONFIGURA EL PRESACALER 1024
	OUT TCCR0B, R16

	LDI R16, 158 ; LE CARGO EL VALOR DEL MAXIMO
	OUT TCNT0, R16 ; CARGO VALOR INICAL DEL CONTADPR

	RET ; REGRESAR AL MAIN LOOP